@using StackOverflowLite.Infrastructure.Membership
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        // Check if the user is in the "Admin" role
        //var isAdmin = User.IsInRole("Admin");

        // Admin name hard coded
        var user = User.Identity.Name;

        if (user.Equals("admin@gmail.com"))
        {
            // Redirect to admin panel
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="User" asp-controller="User" asp-action="AdminPanel">Admin Panel</a>
            </li>            
        }
        else
        {
            // Redirect to user panel
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="User" asp-controller="User" asp-action="UserPanel">User Panel</a>
            </li>
        }

         // Display user information and logout button
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Manage" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>